[tool:pytest]
# Pytest configuration for RAG testing

# Test discovery
testpaths = backend/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async test configuration
asyncio_mode = auto

# Output configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=chat_engine
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --html=reports/pytest_report.html
    --self-contained-html

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance and load testing
    slow: Tests that take more than 5 seconds
    rag: Tests specifically for RAG functionality
    retrieval: Tests for retrieval strategies
    correction: Tests for RAC correction functionality
    mcp: Tests for Model Context Protocol
    requires_llm: Tests that require actual LLM connection
    requires_web: Tests that require web connectivity

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:llama_index.*

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Logging configuration
log_level = INFO
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S